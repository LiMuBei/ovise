#ifndef DOTSCENEXMLREADER_H_
#define DOTSCENEXMLREADER_H_

#include "../../OViSE/OViSEXercesXMLErrorReporter.h"

// Inlcude Xerces
#ifndef Xerxes_Used
#define Xerxes_Used
#include <xercesc/parsers/XercesDOMParser.hpp>
#include <xercesc/dom/DOM.hpp>
#include <xercesc/sax/HandlerBase.hpp>
#include <xercesc/util/XMLString.hpp>
#include <xercesc/util/PlatformUtils.hpp>
#include <string>
#endif

// Include Ogre (for logging)
#ifndef Ogre_h_
#define Ogre_h_
#include "Ogre.h"
#endif

#ifdef XERCES_NEW_IOSTREAMS
#include <iostream>
#else
#include <iostream.h>
#endif

XERCES_CPP_NAMESPACE_USE;
using namespace std;

/**
 * Class for validating and parsing XML-based scene description files generated by
 * the Blender dotScene exporter.
 * The class utilizes the Xerces XML-Parser to validate the given XML-file against the given
 * schema (.xsd). After that the class stores a "blueprint" of the given scene which can then
 * be used to create the scene in Ogre.
 */
class dotSceneXmlReader
{
public:
	/// Constructor that wants a XSD schema file. 
	dotSceneXmlReader(string URLofDotSceneXSD, bool DbgMode = false);
	
	/// Destructor.
	~dotSceneXmlReader();

	/**
	 * Validates the given XML-scenefile and parses it, when it is consistent.
	 * @return true on success, false on error
	 */
	xercesc::DOMDocument* parseDotSceneXML(string URLofXML);

private:
	/// Stores the location of the used schema file.
	string mURLofDotSceneXSD;
	/// Stores the location of the XML-scenefile.
	string mURLofDotSceneXML;
	/// Switch for debug mode. Intended for development usage.
	bool mDebugMode;
	/// The DOM parser
	XercesDOMParser *mParser;
	/// Error handler for the parser
	ErrorHandler *mErrHandler;
};

#endif /*DOTSCENEXMLREADER_H_*/
